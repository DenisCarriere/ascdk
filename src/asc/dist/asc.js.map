{"version":3,"sources":["webpack://asc/webpack/universalModuleDefinition","webpack://asc/./asc.js","webpack://asc/./ext/preprocess.js","webpack://asc/./shim/fs.js","webpack://asc/./shim/path.js","webpack://asc/./shim/process.js","webpack://asc/./util/colors.js","webpack://asc/./util/find.js","webpack://asc/./util/mkdirp.js","webpack://asc/./util/options.js","webpack://asc/./util/utf8.js","webpack://asc/external \"assemblyscript\"","webpack://asc/external \"binaryen\"","webpack://asc/webpack/bootstrap","webpack://asc/webpack/startup","webpack://asc/webpack/runtime/global","webpack://asc/webpack/runtime/node module decorator"],"names":["root","factory","exports","module","require","e","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__911__","__WEBPACK_EXTERNAL_MODULE__525__","fs","path","process","utf8","colorsUtil","optionsUtil","mkdirp","find","binaryen","g","dynrequire","WIN","platform","EOL","SEP","setupExtension","ext","startsWith","ext_d","re","RegExp","re_d","re_except_d","re_index","defaultExtension","assemblyscript","Object","defineProperty","get","ready","removeAllListeners","Error","register","project","join","skipIgnore","compilerOptions","target","console","log","e_ts","stack","isBundle","version","options","libraryPrefix","LIBRARY_PREFIX","defaultOptimizeLevel","defaultShrinkLevel","libraryFiles","libDir","bundled","files","forEach","file","replace","readFileSync","definitionFiles","readDefinition","name","assembly","portable","compileString","sources","output","create","stdout","createMemoryStream","stderr","argv","keys","key","val","opt","type","push","Array","isArray","String","main","concat","readFile","prototype","hasOwnProperty","call","writeFile","contents","listFiles","callback","readFileNode","writeFileNode","listFilesNode","stats","readTime","readCount","writeTime","writeCount","parseTime","parseCount","initializeTime","initializeCount","compileTime","compileCount","emitTime","emitCount","validateTime","validateCount","optimizeTime","optimizeCount","transformTime","transformCount","extension","optionsResult","parse","opts","arguments","noColors","supported","from","unknownOpts","unknown","length","arg","write","yellow","trailingArgv","trailing","err","code","red","test","help","out","color","white","cyan","baseDir","normalize","asconfigPath","resolvePath","config","asconfigFile","basename","asconfigDir","dirname","asconfig","getAsconfig","seenAsconfig","Set","add","targets","targetOptions","merge","generalOptions","entries","entry","extends","has","addDefaults","showConfig","JSON","stringify","unique","values","newOptions","setTarget","setNoAssert","noAssert","setExportMemory","noExportMemory","setImportMemory","importMemory","setInitialMemory","initialMemory","setMaximumMemory","maximumMemory","setSharedMemory","sharedMemory","setImportTable","importTable","setExportTable","exportTable","setExplicitStart","explicitStart","setMemoryBase","memoryBase","setTableBase","tableBase","setSourceMap","sourceMap","setNoUnsafe","noUnsafe","setPedantic","pedantic","setLowMemoryLimit","lowMemoryLimit","use","aliases","i","k","part","p","indexOf","alias","substring","trim","setGlobalAlias","features","disable","split","flag","toUpperCase","disableFeature","enable","enableFeature","optimizeLevel","shrinkLevel","optimize","Math","min","max","setOptimizeLevelHints","program","newProgram","transforms","transform","tsNodeRegistered","transformArgs","filename","endsWith","transpileOnly","skipProject","classOrModule","resolve","paths","cwd","assign","error","applyTransform","args","transfromTime","measure","libPath","customLibDirs","lib","map","libFiles","j","l","libText","abiInfo","packageMains","Map","packageBases","getFile","internalPath","dependeePath","sourceText","sourcePath","plainName","indexName","match","packageName","isPackageRoot","undefined","filePath","basePath","traceResolution","parts","slice","currentPath","relative","mainPath","jsonPath","jsonText","json","ascMain","set","mainDir","parseBacklog","nextFile","getDependee","numErrors","checkDiagnostics","message","runtimeName","runtime","runtimePath","runtimeText","isAbsolute","parser","s","normalizedPath","sort","initializeProgram","compile","getAbiInfo","dispose","noValidate","isValid","validate","trapMode","runPass","debugInfo","debug","usesARC","converge","runPasses","pass","last","toBinary","next","noEmit","outFile","textFile","jsFile","binaryFile","hasStdout","hasOutput","tsdFile","idlFile","sourceFile","wasm","sourceMapURL","writeStdout","sourceRoot","index","text","getSource","sourcesContent","exportIndent","toString","watFormat","toText","idl","buildIDL","tsd","buildTSD","js","toAsmjs","printStats","dirPath","outputFilePath","existsSync","writeFileSync","readdirSync","filter","used","isObject","location","ex","include","diagnostic","nextDiagnostic","formatDiagnostic","isTTY","isError","createStats","fn","start","hrtime","times","formatTime","time","toFixed","format","count","str","len","pad","allocBuffer","Buffer","allocUnsafe","Uint8Array","stream","chunk","buffer","reset","toBuffer","offset","read","tscOptions","alwaysStrict","noImplicitAny","noImplicitReturns","noImplicitThis","noEmitOnError","strictNullChecks","experimentalDecorators","noLib","types","allowJs","outputCodeFile","assertPath","TypeError","normalizeStringPosix","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","posix","resolvedPath","resolvedAbsolute","trailingSeparator","joined","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","hasRoot","end","matchedSlash","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","sep","dir","base","_format","ret","delimiter","win32","umask","previousTimestamp","clocktime","performanceNow","performance","seconds","floor","nanoseconds","now","mozNow","msNow","oNow","webkitNow","Date","getTime","proc","isCI","env","colors","gray","GRAY","RESET","RED","green","GREEN","YELLOW","blue","BLUE","magenta","MAGENTA","CYAN","WHITE","findFiles","statSync","isDirectory","iname","made","mode","mkdirSync","err0","stat","err1","sanitizeValue","value","Boolean","trunc","Number","v","propagateDefaults","option","default","exec","parseInt","parseFloat","indent","padding","eol","sbCategories","sbOther","description","sb","noCategories","category","line","hasCategories","currentOptions","parentOptions","parentBaseDir","mergedOptions","mutuallyExclusive","isPath","useNodeResolution","cliOnly","currentValue","parentValue","exclude","includes","defaultValue","string","c","t","fromCharCode","apply","c1","c2","__webpack_module_cache__","__webpack_require__","moduleId","id","loaded","__webpack_modules__","globalThis","Function","window","nmd","children"],"mappings":"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","file":"asc.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"binaryen\"), (function webpackLoadOptionalExternalModule() { try { return require(\"assemblyscript\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"binaryen\", \"assemblyscript\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"asc\"] = factory(require(\"binaryen\"), (function webpackLoadOptionalExternalModule() { try { return require(\"assemblyscript\"); } catch(e) {} }()));\n\telse\n\t\troot[\"asc\"] = factory(root[\"binaryen\"], root[\"assemblyscript\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__911__, __WEBPACK_EXTERNAL_MODULE__525__) {\nreturn ","/**\n * @license\n * Copyright 2020 Daniel Wirtz / The AssemblyScript Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Compiler frontend for node.js\n *\n * Uses the low-level API exported from src/index.ts so it works with the compiler compiled to\n * JavaScript as well as the compiler compiled to WebAssembly (eventually). Runs the sources\n * directly through ts-node if distribution files are not present.\n *\n * Can also be packaged as a bundle suitable for in-browser use with the standard library injected\n * in the build step. See dist/asc.js for the bundle and webpack.config.js for building details.\n */\n\n/* global BUNDLE_VERSION, BUNDLE_LIBRARY, BUNDLE_DEFINITIONS */\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst process = require(\"process\"); // ensure shim\n\nconst utf8 = require(\"./util/utf8\");\nconst colorsUtil = require(\"./util/colors\");\nconst optionsUtil = require(\"./util/options\");\nconst mkdirp = require(\"./util/mkdirp\");\nconst find = require(\"./util/find\");\nconst binaryen = global.binaryen || (global.binaryen = require(\"binaryen\"));\nconst preprocess = require(\"./ext/preprocess\");\n\nconst dynrequire = typeof __webpack_require__ === \"function\"\n  ? __non_webpack_require__\n  : require;\n\nconst WIN = process.platform === \"win32\";\nconst EOL = WIN ? \"\\r\\n\" : \"\\n\";\nconst SEP = WIN ? \"\\\\\" : \"/\";\n\n// Sets up an extension with its definition counterpart and relevant regexes.\nfunction setupExtension(ext) {\n  if (!ext.startsWith(\".\")) ext = \".\" + ext;\n  return {\n    ext,\n    ext_d: \".d\" + ext,\n    re: new RegExp(\"\\\\\" + ext + \"$\"),\n    re_d: new RegExp(\"\\\\.d\\\\\" + ext + \"$\"),\n    re_except_d: new RegExp(\"^(?!.*\\\\.d\\\\\" + ext + \"$).*\\\\\" + ext + \"$\"),\n    re_index: new RegExp(\"(?:^|[\\\\\\\\\\\\/])index\\\\\" + ext + \"$\")\n  };\n}\n\nconst defaultExtension = setupExtension(\".ts\");\n\n// Proxy Binaryen's ready event\nObject.defineProperty(exports, \"ready\", {\n  get() { return binaryen.ready; }\n});\n\n// Emscripten adds an `uncaughtException` listener to Binaryen that results in an additional\n// useless code fragment on top of an actual error. suppress this:\nif (process.removeAllListeners) process.removeAllListeners(\"uncaughtException\");\n\n// Use distribution files if present, otherwise run the sources directly.\nvar assemblyscript;\n(function loadAssemblyScript() {\n  try {\n    // note that this case will always trigger in recent node.js versions for typical installs\n    // see: https://nodejs.org/api/packages.html#packages_self_referencing_a_package_using_its_name\n    throw new Error();\n    assemblyscript = require(\"assemblyscript\");\n  } catch (e) {\n    try { // `asc` on the command line (unnecessary in recent node)\n      throw new Error();\n      assemblyscript = dynrequire(\"../dist/assemblyscript.js\");\n    } catch (e) {\n      try { // `asc` on the command line without dist files (unnecessary in recent node)\n        dynrequire(\"ts-node\").register({\n          project: path.join(__dirname, \"..\", \"src\", \"tsconfig.json\"),\n          skipIgnore: true,\n          compilerOptions: { target: \"ES2016\" }\n        });\n        dynrequire(\"../src/glue/js\");\n        assemblyscript = dynrequire(\"../src\");\n        console.log('load assemblyscript');\n      } catch (e_ts) {\n        try { // `require(\"dist/asc.js\")` in explicit browser tests\n          assemblyscript = dynrequire(\"./assemblyscript\");\n        } catch (e) {\n          throw Error(e_ts.stack + \"\\n---\\n\" + e.stack);\n        }\n      }\n    }\n  }\n})();\n\n/** Whether this is a webpack bundle or not. */\nexports.isBundle = typeof BUNDLE_VERSION === \"string\";\n\n/** AssemblyScript version. */\nexports.version = exports.isBundle ? BUNDLE_VERSION : dynrequire(\"../package.json\").version;\n\n/** Available CLI options. */\nexports.options = require(\"./asc.json\");\n\n/** Prefix used for library files. */\nexports.libraryPrefix = assemblyscript.LIBRARY_PREFIX;\n\n/** Default Binaryen optimization level. */\nexports.defaultOptimizeLevel = 3;\n\n/** Default Binaryen shrink level. */\nexports.defaultShrinkLevel = 1;\n\n/** Bundled library files. */\nexports.libraryFiles = exports.isBundle ? BUNDLE_LIBRARY : (() => { // set up if not a bundle\n  const libDir = path.join(__dirname, \"..\", \"std\", \"assembly\");\n  const bundled = {};\n  find\n    .files(libDir, defaultExtension.re_except_d)\n    .forEach(file => {\n      bundled[file.replace(defaultExtension.re, \"\")] = fs.readFileSync(path.join(libDir, file), \"utf8\");\n    });\n  return bundled;\n})();\n\n/** Bundled definition files. */\nexports.definitionFiles = exports.isBundle ? BUNDLE_DEFINITIONS : (() => { // set up if not a bundle\n  const readDefinition = name => fs.readFileSync(\n    path.join(__dirname, \"..\", \"std\", name, \"index\" + defaultExtension.ext_d),\n    \"utf8\"\n  );\n  return {\n    assembly: readDefinition(\"assembly\"),\n    portable: readDefinition(\"portable\")\n  };\n})();\n\n/** Convenience function that parses and compiles source strings directly. */\nexports.compileString = (sources, options) => {\n  if (typeof sources === \"string\") sources = { [\"input\" + defaultExtension.ext]: sources };\n  const output = Object.create({\n    stdout: createMemoryStream(),\n    stderr: createMemoryStream()\n  });\n  var argv = [\n    \"--binaryFile\", \"binary\",\n    \"--textFile\", \"text\",\n  ];\n  Object.keys(options || {}).forEach(key => {\n    var val = options[key];\n    var opt = exports.options[key];\n    if (opt && opt.type === \"b\") {\n      if (val) argv.push(\"--\" + key);\n    } else {\n      if (Array.isArray(val)) {\n        val.forEach(val => { argv.push(\"--\" + key, String(val)); });\n      }\n      else argv.push(\"--\" + key, String(val));\n    }\n  });\n  exports.main(argv.concat(Object.keys(sources)), {\n    stdout: output.stdout,\n    stderr: output.stderr,\n    readFile: name => Object.prototype.hasOwnProperty.call(sources, name) ? sources[name] : null,\n    writeFile: (name, contents) => { output[name] = contents; },\n    listFiles: () => []\n  });\n  return output;\n};\n\n/** Runs the command line utility using the specified arguments array. */\nexports.main = function main(argv, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = {};\n  } else if (!options) {\n    options = {};\n  }\n\n  const stdout = options.stdout || process.stdout;\n  const stderr = options.stderr || process.stderr;\n  const readFile = options.readFile || readFileNode;\n  const writeFile = options.writeFile || writeFileNode;\n  const listFiles = options.listFiles || listFilesNode;\n  const stats = options.stats || createStats();\n  let extension = defaultExtension;\n\n  // Output must be specified if not present in the environment\n  if (!stdout) throw Error(\"'options.stdout' must be specified\");\n  if (!stderr) throw Error(\"'options.stderr' must be specified\");\n\n  // Parse command line options but do not populate option defaults yet\n  const optionsResult = optionsUtil.parse(argv, exports.options, false);\n  let opts = optionsResult.options;\n  argv = optionsResult.arguments;\n\n  if (opts.noColors) {\n    colorsUtil.stdout.supported =\n    colorsUtil.stderr.supported = false;\n  } else {\n    colorsUtil.stdout = colorsUtil.from(stdout);\n    colorsUtil.stderr = colorsUtil.from(stderr);\n  }\n\n  // Check for unknown options\n  const unknownOpts = optionsResult.unknown;\n  if (unknownOpts.length) {\n    unknownOpts.forEach(arg => {\n      stderr.write(colorsUtil.stderr.yellow(\"WARNING \") + \"Unknown option '\" + arg + \"'\" + EOL);\n    });\n  }\n\n  // Check for trailing arguments\n  const trailingArgv = optionsResult.trailing;\n  if (trailingArgv.length) {\n    stderr.write(colorsUtil.stderr.yellow(\"WARNING \") + \"Unsupported trailing arguments: \" + trailingArgv.join(\" \") + EOL);\n  }\n\n  // Use default callback if none is provided\n  if (!callback) callback = function defaultCallback(err) {\n    var code = 0;\n    if (err) {\n      stderr.write(colorsUtil.stderr.red(\"FAILURE \") + err.stack.replace(/^ERROR: /i, \"\") + EOL);\n      code = 1;\n    }\n    return code;\n  };\n\n  // Just print the version if requested\n  if (opts.version) {\n    stdout.write(\"Version \" + exports.version + EOL);\n    return callback(null);\n  }\n\n  // Use another extension if requested\n  if (typeof opts.extension === \"string\") {\n    if (/^\\.?[0-9a-zA-Z]{1,14}$/.test(opts.extension)) {\n      extension = setupExtension(opts.extension);\n    } else {\n      return callback(Error(\"Invalid extension: \" + opts.extension));\n    }\n  }\n\n  // Print the help message if requested or no source files are provided\n  if (opts.help || !argv.length) {\n    var out = opts.help ? stdout : stderr;\n    var color = opts.help ? colorsUtil.stdout : colorsUtil.stderr;\n    out.write([\n      color.white(\"SYNTAX\"),\n      \"  \" + color.cyan(\"asc\") + \" [entryFile ...] [options]\",\n      \"\",\n      color.white(\"EXAMPLES\"),\n      \"  \" + color.cyan(\"asc\") + \" hello\" + extension.ext,\n      \"  \" + color.cyan(\"asc\") + \" hello\" + extension.ext + \" -b hello.wasm -t hello.wat\",\n      \"  \" + color.cyan(\"asc\") + \" hello1\" + extension.ext + \" hello2\" + extension.ext + \" -b -O > hello.wasm\",\n      \"\",\n      color.white(\"OPTIONS\"),\n    ].concat(\n      optionsUtil.help(exports.options, 24, EOL)\n    ).join(EOL) + EOL);\n    return callback(null);\n  }\n\n  // I/O must be specified if not present in the environment\n  if (!fs.readFileSync) {\n    if (readFile === readFileNode) throw Error(\"'options.readFile' must be specified\");\n    if (writeFile === writeFileNode) throw Error(\"'options.writeFile' must be specified\");\n    if (listFiles === listFilesNode) throw Error(\"'options.listFiles' must be specified\");\n  }\n\n  // Set up base directory\n  const baseDir = path.normalize(opts.baseDir || \".\");\n\n  // Load additional options from asconfig.json\n  let asconfigPath = optionsUtil.resolvePath(opts.config || \"asconfig.json\", baseDir);\n  let asconfigFile = path.basename(asconfigPath);\n  let asconfigDir = path.dirname(asconfigPath);\n  let asconfig = getAsconfig(asconfigFile, asconfigDir, readFile);\n\n  const seenAsconfig = new Set();\n  seenAsconfig.add(asconfigPath);\n\n  const target = opts.target || \"release\";\n  while (asconfig) {\n    // Merge target first\n    if (asconfig.targets) {\n      const targetOptions = asconfig.targets[target];\n      if (targetOptions) {\n        opts = optionsUtil.merge(exports.options, opts, targetOptions, asconfigDir);\n      }\n    }\n    // Merge general options\n    const generalOptions = asconfig.options;\n    if (generalOptions) {\n      opts = optionsUtil.merge(exports.options, opts, generalOptions, asconfigDir);\n    }\n\n    // Append entries\n    if (asconfig.entries) {\n      for (let entry of asconfig.entries) {\n        argv.push(optionsUtil.resolvePath(entry, asconfigDir));\n      }\n    }\n\n    // Look up extended asconfig and repeat\n    if (asconfig.extends) {\n      asconfigPath = optionsUtil.resolvePath(asconfig.extends, asconfigDir, true);\n      asconfigFile = path.basename(asconfigPath);\n      asconfigDir = path.dirname(asconfigPath);\n      if (seenAsconfig.has(asconfigPath)) break;\n      seenAsconfig.add(asconfigPath);\n      asconfig = getAsconfig(asconfigFile, asconfigDir, readFile);\n    } else {\n      break;\n    }\n  }\n\n  // Populate option defaults once user-defined options are set\n  optionsUtil.addDefaults(exports.options, opts);\n\n  // If showConfig print options and exit\n  if (opts.showConfig) {\n    stderr.write(JSON.stringify({\n      options: opts,\n      entries: argv\n    }, null, 2));\n    return callback(null);\n  }\n\n  // create a unique set of values\n  function unique(values) {\n    return [...new Set(values)];\n  }\n\n  // Set up options\n  const compilerOptions = assemblyscript.newOptions();\n  assemblyscript.setTarget(compilerOptions, 0);\n  assemblyscript.setNoAssert(compilerOptions, opts.noAssert);\n  assemblyscript.setExportMemory(compilerOptions, !opts.noExportMemory);\n  assemblyscript.setImportMemory(compilerOptions, opts.importMemory);\n  assemblyscript.setInitialMemory(compilerOptions, opts.initialMemory >>> 0);\n  assemblyscript.setMaximumMemory(compilerOptions, opts.maximumMemory >>> 0);\n  assemblyscript.setSharedMemory(compilerOptions, opts.sharedMemory);\n  assemblyscript.setImportTable(compilerOptions, opts.importTable);\n  assemblyscript.setExportTable(compilerOptions, opts.exportTable);\n  assemblyscript.setExplicitStart(compilerOptions, opts.explicitStart);\n  assemblyscript.setMemoryBase(compilerOptions, opts.memoryBase >>> 0);\n  assemblyscript.setTableBase(compilerOptions, opts.tableBase >>> 0);\n  assemblyscript.setSourceMap(compilerOptions, opts.sourceMap != null);\n  assemblyscript.setNoUnsafe(compilerOptions, opts.noUnsafe);\n  assemblyscript.setPedantic(compilerOptions, opts.pedantic);\n  assemblyscript.setLowMemoryLimit(compilerOptions, opts.lowMemoryLimit >>> 0);\n\n  // Add or override aliases if specified\n  if (opts.use) {\n    let aliases = opts.use;\n    for (let i = 0, k = aliases.length; i < k; ++i) {\n      let part = aliases[i];\n      let p = part.indexOf(\"=\");\n      if (p < 0) return callback(Error(\"Global alias '\" + part + \"' is invalid.\"));\n      let alias = part.substring(0, p).trim();\n      let name = part.substring(p + 1).trim();\n      if (!alias.length) return callback(Error(\"Global alias '\" + part + \"' is invalid.\"));\n      assemblyscript.setGlobalAlias(compilerOptions, alias, name);\n    }\n  }\n\n  // Disable default features if specified\n  var features;\n  if ((features = opts.disable) != null) {\n    if (typeof features === \"string\") features = features.split(\",\");\n    for (let i = 0, k = features.length; i < k; ++i) {\n      let name = features[i].trim();\n      let flag = assemblyscript[\"FEATURE_\" + name.replace(/-/g, \"_\").toUpperCase()];\n      if (!flag) return callback(Error(\"Feature '\" + name + \"' is unknown.\"));\n      assemblyscript.disableFeature(compilerOptions, flag);\n    }\n  }\n\n  // Enable experimental features if specified\n  if ((features = opts.enable) != null) {\n    if (typeof features === \"string\") features = features.split(\",\");\n    for (let i = 0, k = features.length; i < k; ++i) {\n      let name = features[i].trim();\n      let flag = assemblyscript[\"FEATURE_\" + name.replace(/-/g, \"_\").toUpperCase()];\n      if (!flag) return callback(Error(\"Feature '\" + name + \"' is unknown.\"));\n      assemblyscript.enableFeature(compilerOptions, flag);\n    }\n  }\n\n  // Set up optimization levels\n  var optimizeLevel = 0;\n  var shrinkLevel = 0;\n  if (opts.optimize) {\n    optimizeLevel = exports.defaultOptimizeLevel;\n    shrinkLevel = exports.defaultShrinkLevel;\n  }\n  if (typeof opts.optimizeLevel === \"number\") optimizeLevel = opts.optimizeLevel;\n  if (typeof opts.shrinkLevel === \"number\") shrinkLevel = opts.shrinkLevel;\n  optimizeLevel = Math.min(Math.max(optimizeLevel, 0), 3);\n  shrinkLevel = Math.min(Math.max(shrinkLevel, 0), 2);\n  assemblyscript.setOptimizeLevelHints(compilerOptions, optimizeLevel, shrinkLevel);\n\n  // Initialize the program\n  const program = assemblyscript.newProgram(compilerOptions);\n\n  // Set up transforms\n  const transforms = [];\n  if (opts.transform) {\n    let tsNodeRegistered = false;\n    let transformArgs = unique(opts.transform);\n    for (let i = 0, k = transformArgs.length; i < k; ++i) {\n      let filename = transformArgs[i].trim();\n      if (!tsNodeRegistered && filename.endsWith(\".ts\")) { // ts-node requires .ts specifically\n        dynrequire(\"ts-node\").register({ transpileOnly: true, skipProject: true, compilerOptions: { target: \"ES2016\" } });\n        tsNodeRegistered = true;\n      }\n      try {\n        const classOrModule = dynrequire(dynrequire.resolve(filename, { paths: [baseDir, process.cwd()] }));\n        if (typeof classOrModule === \"function\") {\n          Object.assign(classOrModule.prototype, {\n            program,\n            baseDir,\n            stdout,\n            stderr,\n            log: console.error,\n            readFile,\n            writeFile,\n            listFiles\n          });\n          transforms.push(new classOrModule());\n        } else {\n          transforms.push(classOrModule); // legacy module\n        }\n      } catch (e) {\n        return callback(e);\n      }\n    }\n  }\n\n  function applyTransform(name, ...args) {\n    for (let i = 0, k = transforms.length; i < k; ++i) {\n      let transform = transforms[i];\n      if (typeof transform[name] === \"function\") {\n        try {\n          stats.transformCount++;\n          stats.transfromTime += measure(() => {\n            transform[name](...args);\n          });\n        } catch (e) {\n          return e;\n        }\n      }\n    }\n  }\n\n  // Parse library files\n  Object.keys(exports.libraryFiles).forEach(libPath => {\n    if (libPath.indexOf(\"/\") >= 0) return; // in sub-directory: imported on demand\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      assemblyscript.parse(program, exports.libraryFiles[libPath], exports.libraryPrefix + libPath + extension.ext, false);\n    });\n  });\n  let customLibDirs = [];\n  if (opts.lib) {\n    let lib = opts.lib;\n    if (typeof lib === \"string\") lib = lib.split(\",\");\n    customLibDirs.push(...lib.map(p => p.trim()));\n    customLibDirs = unique(customLibDirs); // `lib` and `customLibDirs` may include duplicates\n    for (let i = 0, k = customLibDirs.length; i < k; ++i) { // custom\n      let libDir = customLibDirs[i];\n      let libFiles;\n      if (libDir.endsWith(extension.ext)) {\n        libFiles = [ path.basename(libDir) ];\n        libDir = path.dirname(libDir);\n      } else {\n        libFiles = listFiles(libDir, baseDir) || [];\n      }\n      for (let j = 0, l = libFiles.length; j < l; ++j) {\n        let libPath = libFiles[j];\n        let libText = readFile(libPath, libDir);\n        if (libText === null) return callback(Error(\"Library file '\" + libPath + \"' not found.\"));\n        stats.parseCount++;\n        exports.libraryFiles[libPath.replace(extension.re, \"\")] = libText;\n        stats.parseTime += measure(() => {\n          assemblyscript.parse(program, libText, exports.libraryPrefix + libPath, false);\n        });\n      }\n    }\n  }\n  opts.path = opts.path || [];\n\n  // Maps package names to parent directory\n  var packageMains = new Map();\n  var packageBases = new Map();\n\n  // Gets the file matching the specified source path, imported at the given dependee path\n  function getFile(internalPath, dependeePath) {\n    var sourceText = null; // text reported back to the compiler\n    var sourcePath = null; // path reported back to the compiler\n\n    const libraryPrefix = exports.libraryPrefix;\n    const libraryFiles = exports.libraryFiles;\n\n    // Try file.ext, file/index.ext, file.d.ext\n    if (!internalPath.startsWith(libraryPrefix)) {\n      if ((sourceText = readFile(sourcePath = internalPath + extension.ext, baseDir)) == null) {\n        if ((sourceText = readFile(sourcePath = internalPath + \"/index\" + extension.ext, baseDir)) == null) {\n          // portable d.ext: uses the .js file next to it in JS or becomes an import in Wasm\n          sourcePath = internalPath + extension.ext;\n          sourceText = readFile(internalPath + extension.ext_d, baseDir);\n        }\n      }\n\n    // Search library in this order: stdlib, custom lib dirs, paths\n    } else {\n      const plainName = internalPath.substring(libraryPrefix.length);\n      const indexName = plainName + \"/index\";\n      if (Object.prototype.hasOwnProperty.call(libraryFiles, plainName)) {\n        sourceText = libraryFiles[plainName];\n        sourcePath = libraryPrefix + plainName + extension.ext;\n      } else if (Object.prototype.hasOwnProperty.call(libraryFiles, indexName)) {\n        sourceText = libraryFiles[indexName];\n        sourcePath = libraryPrefix + indexName + extension.ext;\n      } else { // custom lib dirs\n        for (const libDir of customLibDirs) {\n          if ((sourceText = readFile(plainName + extension.ext, libDir)) != null) {\n            sourcePath = libraryPrefix + plainName + extension.ext;\n            break;\n          } else {\n            if ((sourceText = readFile(indexName + extension.ext, libDir)) != null) {\n              sourcePath = libraryPrefix + indexName + extension.ext;\n              break;\n            }\n          }\n        }\n        if (sourceText == null) { // paths\n          const match = internalPath.match(/^~lib\\/((?:@[^/]+\\/)?[^/]+)(?:\\/(.+))?/); // ~lib/(pkg)/(path), ~lib/(@org/pkg)/(path)\n          if (match) {\n            const packageName = match[1];\n            const isPackageRoot = match[2] === undefined;\n            const filePath = isPackageRoot ? \"index\" : match[2];\n            const basePath = packageBases.has(dependeePath) ? packageBases.get(dependeePath) : \".\";\n            if (opts.traceResolution) stderr.write(\"Looking for package '\" + packageName + \"' file '\" + filePath + \"' relative to '\" + basePath + \"'\" + EOL);\n            const paths = [];\n            const parts = path.resolve(baseDir, basePath).split(SEP);\n            for (let i = parts.length, k = WIN ? 1 : 0; i >= k; --i) {\n              if (parts[i - 1] !== \"node_modules\") paths.push(parts.slice(0, i).join(SEP) + SEP + \"node_modules\");\n            }\n            for (const currentPath of paths.concat(...opts.path).map(p => path.relative(baseDir, p))) {\n              if (opts.traceResolution) stderr.write(\"  in \" + path.join(currentPath, packageName) + EOL);\n              let mainPath = \"assembly\";\n              if (packageMains.has(packageName)) { // use cached\n                mainPath = packageMains.get(packageName);\n              } else { // evaluate package.json\n                let jsonPath = path.join(currentPath, packageName, \"package.json\");\n                let jsonText = readFile(jsonPath, baseDir);\n                if (jsonText != null) {\n                  try {\n                    let json = JSON.parse(jsonText);\n                    if (typeof json.ascMain === \"string\") {\n                      mainPath = json.ascMain.replace(extension.re_index, \"\");\n                      packageMains.set(packageName, mainPath);\n                    }\n                  } catch (e) { /* nop */ }\n                }\n              }\n              const mainDir = path.join(currentPath, packageName, mainPath);\n              const plainName = filePath;\n              if ((sourceText = readFile(path.join(mainDir, plainName + extension.ext), baseDir)) != null) {\n                sourcePath = libraryPrefix + packageName + \"/\" + plainName + extension.ext;\n                packageBases.set(sourcePath.replace(extension.re, \"\"), path.join(currentPath, packageName));\n                if (opts.traceResolution) stderr.write(\"  -> \" + path.join(mainDir, plainName + extension.ext) + EOL);\n                break;\n              } else if (!isPackageRoot) {\n                const indexName = filePath + \"/index\";\n                if ((sourceText = readFile(path.join(mainDir, indexName + extension.ext), baseDir)) !== null) {\n                  sourcePath = libraryPrefix + packageName + \"/\" + indexName + extension.ext;\n                  packageBases.set(sourcePath.replace(extension.re, \"\"), path.join(currentPath, packageName));\n                  if (opts.traceResolution) stderr.write(\"  -> \" + path.join(mainDir, indexName + extension.ext) + EOL);\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    // No such file\n    if (sourceText == null) return null;\n    return { sourceText, sourcePath };\n  }\n\n  // Parses the backlog of imported files after including entry files\n  function parseBacklog() {\n    var internalPath;\n    while ((internalPath = assemblyscript.nextFile(program)) != null) {\n      let file = getFile(internalPath, assemblyscript.getDependee(program, internalPath));\n      if (file) {\n        stats.parseCount++;\n        stats.parseTime += measure(() => {\n          assemblyscript.parse(program, file.sourceText, file.sourcePath, false);\n        });\n      } else {\n        assemblyscript.parse(program, null, internalPath + extension.ext, false);\n      }\n    }\n    var numErrors = checkDiagnostics(program, stderr);\n    if (numErrors) {\n      const err = Error(numErrors + \" parse error(s)\");\n      err.stack = err.message; // omit stack\n      return callback(err);\n    }\n  }\n\n  // Include runtime template before entry files so its setup runs first\n  {\n    let runtimeName = String(opts.runtime);\n    let runtimePath = \"rt/index-\" + runtimeName;\n    let runtimeText = exports.libraryFiles[runtimePath];\n    if (runtimeText == null) {\n      runtimePath = runtimeName;\n      runtimeText = readFile(runtimePath + extension.ext, baseDir);\n      if (runtimeText == null) return callback(Error(\"Runtime '\" + runtimeName + \"' not found.\"));\n    } else {\n      runtimePath = \"~lib/\" + runtimePath;\n    }\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      assemblyscript.parse(program, runtimeText, runtimePath + extension.ext, true);\n    });\n  }\n\n  // Include entry files\n  for (let i = 0, k = argv.length; i < k; ++i) {\n    const filename = argv[i];\n\n    let sourcePath = String(filename).replace(/\\\\/g, \"/\").replace(extension.re, \"\").replace(/[\\\\/]$/, \"\");\n\n    // Setting the path to relative path\n    sourcePath = path.isAbsolute(sourcePath) ? path.relative(baseDir, sourcePath).replace(/\\\\/g, \"/\") : sourcePath;\n\n    // Try entryPath.ext, then entryPath/index.ext\n    let sourceText = readFile(sourcePath + extension.ext, baseDir);\n    if (sourceText == null) {\n      sourceText = readFile(sourcePath + \"/index\" + extension.ext, baseDir);\n      if (sourceText != null) sourcePath += \"/index\" + extension.ext;\n      else sourcePath += extension.ext;\n    } else {\n      sourcePath += extension.ext;\n    }\n\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      // console.log('sourcePath', sourcePath);\n      // console.log('sourceText', sourceText);\n      process.sourceText = sourceText;\n      assemblyscript.parse(program, sourceText, sourcePath, true);\n    });\n  }\n\n  // Parse entry files\n  {\n    let code = parseBacklog();\n    if (code) return code;\n  }\n\n  // Call afterParse transform hook\n  {\n    let error = applyTransform(\"afterParse\", program.parser);\n    if (error) return callback(error);\n  }\n\n  // Parse additional files, if any\n  {\n    let code = parseBacklog();\n    if (code) return code;\n  }\n\n  // Print files and exit if listFiles\n  if (opts.listFiles) {\n    // FIXME: not a proper C-like API\n    stderr.write(program.sources.map(s => s.normalizedPath).sort().join(EOL) + EOL);\n    return callback(null);\n  }\n\n  // Pre-emptively initialize the program\n  stats.initializeCount++;\n  stats.initializeTime += measure(() => {\n    assemblyscript.initializeProgram(program);\n  });\n\n  // Call afterInitialize transform hook\n  {\n    let error = applyTransform(\"afterInitialize\", program);\n    if (error) return callback(error);\n  }\n\n  var module;\n  var abiInfo;\n  stats.compileCount++;\n  stats.compileTime += measure(() => {\n    module = assemblyscript.compile(program);\n    abiInfo = assemblyscript.getAbiInfo(program);\n  });\n  var numErrors = checkDiagnostics(program, stderr);\n  if (numErrors) {\n    if (module) module.dispose();\n    const err = Error(numErrors + \" compile error(s)\");\n    err.stack = err.message; // omit stack\n    return callback(err);\n  }\n\n  // Call afterCompile transform hook\n  {\n    let error = applyTransform(\"afterCompile\", module);\n    if (error) return callback(error);\n  }\n\n  // Validate the module if requested\n  if (!opts.noValidate) {\n    stats.validateCount++;\n    let isValid;\n    stats.validateTime += measure(() => {\n      isValid = module.validate();\n    });\n    if (!isValid) {\n      module.dispose();\n      return callback(Error(\"validate error\"));\n    }\n  }\n\n  // Set Binaryen-specific options\n  if (opts.trapMode === \"clamp\") {\n    stats.optimizeCount++;\n    stats.optimizeTime += measure(() => {\n      module.runPass(\"trap-mode-clamp\");\n    });\n  } else if (opts.trapMode === \"js\") {\n    stats.optimizeCount++;\n    stats.optimizeTime += measure(() => {\n      module.runPass(\"trap-mode-js\");\n    });\n  } else if (opts.trapMode !== \"allow\") {\n    module.dispose();\n    return callback(Error(\"Unsupported trap mode\"));\n  }\n\n  // Optimize the module\n  const debugInfo = opts.debug;\n  const usesARC = opts.runtime == \"half\" || opts.runtime == \"full\";\n  const converge = opts.converge;\n  const runPasses = [];\n  if (opts.runPasses) {\n    if (typeof opts.runPasses === \"string\") {\n      opts.runPasses = opts.runPasses.split(\",\");\n    }\n    if (opts.runPasses.length) {\n      opts.runPasses.forEach(pass => {\n        if (runPasses.indexOf(pass = pass.trim()) < 0)\n          runPasses.push(pass);\n      });\n    }\n  }\n\n  stats.optimizeTime += measure(() => {\n    stats.optimizeCount++;\n    module.optimize(optimizeLevel, shrinkLevel, debugInfo, usesARC);\n    module.runPasses(runPasses);\n    if (converge) {\n      let last = module.toBinary();\n      do {\n        stats.optimizeCount++;\n        module.optimize(optimizeLevel, shrinkLevel, debugInfo, usesARC);\n        module.runPasses(runPasses);\n        let next = module.toBinary();\n        if (next.output.length >= last.output.length) {\n          if (next.output.length > last.output.length) {\n            stderr.write(\"Last converge was suboptimial.\" + EOL);\n          }\n          break;\n        }\n        last = next;\n      } while (true);\n    }\n  });\n\n  // Prepare output\n  if (!opts.noEmit) {\n    if (opts.outFile != null) {\n      if (/\\.was?t$/.test(opts.outFile) && opts.textFile == null) {\n        opts.textFile = opts.outFile;\n      } else if (/\\.js$/.test(opts.outFile) && opts.jsFile == null) {\n        opts.jsFile = opts.outFile;\n      } else if (opts.binaryFile == null) {\n        opts.binaryFile = opts.outFile;\n      }\n    }\n\n    let hasStdout = false;\n    let hasOutput = opts.textFile != null\n                 || opts.binaryFile != null\n                 || opts.jsFile != null\n                 || opts.tsdFile != null\n                 || opts.idlFile != null\n                 || opts.sourceFile != null;\n\n    // Write binary\n    if (opts.binaryFile != null) {\n      let basename = path.basename(opts.binaryFile);\n      let sourceMapURL = opts.sourceMap != null\n        ? opts.sourceMap.length\n          ? opts.sourceMap\n          : \"./\" + basename + \".map\"\n        : null;\n\n      let wasm;\n      stats.emitCount++;\n      stats.emitTime += measure(() => {\n        wasm = module.toBinary(sourceMapURL);\n      });\n\n      if (opts.binaryFile.length) {\n        writeFile(opts.binaryFile, wasm.output, baseDir);\n      } else {\n        writeStdout(wasm.output);\n        hasStdout = true;\n      }\n\n      // Post-process source map\n      if (wasm.sourceMap != null) {\n        if (opts.binaryFile.length) {\n          let map = JSON.parse(wasm.sourceMap);\n          map.sourceRoot = \"./\" + basename;\n          let contents = [];\n          map.sources.forEach((name, index) => {\n            let text = assemblyscript.getSource(program, name.replace(extension.re, \"\"));\n            if (text == null) return callback(Error(\"Source of file '\" + name + \"' not found.\"));\n            contents[index] = text;\n          });\n          map.sourcesContent = contents;\n          writeFile(path.join(\n            path.dirname(opts.binaryFile),\n            path.basename(sourceMapURL)\n          ).replace(/^\\.\\//, \"\"), JSON.stringify(map), baseDir);\n        } else {\n          stderr.write(\"Skipped source map (stdout already occupied)\" + EOL);\n        }\n      }\n    }\n\n    // Extension add START\n    if (opts.sourceFile != null || !hasOutput) {\n      out = abiInfo.exportIndent.toString();\n      writeFile(opts.sourceFile, process.sourceText + out, baseDir);\n      // preprocess.outputCodeFile(abiInfo, hasOutput, opts, stats, baseDir, writeFile);\n    }\n    // Extension add END\n\n    // Write text (also fallback)\n    if (opts.textFile != null || !hasOutput) {\n      let out;\n      if (opts.textFile != null && opts.textFile.length) {\n        // use superset text format when extension is `.wast`.\n        // Otherwise use official stack IR format (wat).\n        let watFormat = !opts.textFile.endsWith('.wast');\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          out = module.toText(watFormat);\n        });\n        writeFile(opts.textFile, out, baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          out = module.toText();\n        });\n        writeStdout(out);\n      }\n    }\n\n    // Write WebIDL\n    if (opts.idlFile != null) {\n      let idl;\n      if (opts.idlFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          idl = assemblyscript.buildIDL(program);\n        });\n        writeFile(opts.idlFile, idl, baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          idl = assemblyscript.buildIDL(program);\n        });\n        writeStdout(idl);\n        hasStdout = true;\n      }\n    }\n\n    // Write TypeScript definition\n    if (opts.tsdFile != null) {\n      let tsd;\n      if (opts.tsdFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          tsd = assemblyscript.buildTSD(program);\n        });\n        writeFile(opts.tsdFile, tsd, baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          tsd = assemblyscript.buildTSD(program);\n        });\n        writeStdout(tsd);\n        hasStdout = true;\n      }\n    }\n\n    // Write JS (modifies the binary, so must be last)\n    if (opts.jsFile != null) {\n      let js;\n      if (opts.jsFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          js = module.toAsmjs();\n        });\n        writeFile(opts.jsFile, js, baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          js = module.toAsmjs();\n        });\n        writeStdout(js);\n      }\n    }\n  }\n\n  module.dispose();\n  if (opts.measure) {\n    printStats(stats, stderr);\n  }\n\n  return callback(null);\n\n  function readFileNode(filename, baseDir) {\n    let name = path.resolve(baseDir, filename);\n    try {\n      let text;\n      stats.readCount++;\n      stats.readTime += measure(() => {\n        text = fs.readFileSync(name, \"utf8\");\n      });\n      return text;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  function writeFileNode(filename, contents, baseDir) {\n    try {\n      stats.writeCount++;\n      stats.writeTime += measure(() => {\n        const dirPath = path.resolve(baseDir, path.dirname(filename));\n        filename = path.basename(filename);\n        const outputFilePath = path.join(dirPath, filename);\n        if (!fs.existsSync(dirPath)) mkdirp(dirPath);\n        fs.writeFileSync(outputFilePath, contents);\n      });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function listFilesNode(dirname, baseDir) {\n    var files;\n    try {\n      stats.readCount++;\n      stats.readTime += measure(() => {\n        files = fs.readdirSync(path.join(baseDir, dirname))\n          .filter(file => extension.re_except_d.test(file));\n      });\n      return files;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  function writeStdout(contents) {\n    if (!writeStdout.used) {\n      stats.writeCount++;\n      writeStdout.used = true;\n    }\n    stats.writeTime += measure(() => {\n      stdout.write(contents);\n    });\n  }\n};\n\nconst toString = Object.prototype.toString;\n\nfunction isObject(arg) {\n  return toString.call(arg) === \"[object Object]\";\n}\n\nfunction getAsconfig(file, baseDir, readFile) {\n  const contents = readFile(file, baseDir);\n  const location = path.join(baseDir, file);\n  if (!contents) return null;\n\n  // obtain the configuration\n  let config;\n  try {\n    config = JSON.parse(contents);\n  } catch(ex) {\n    throw new Error(\"Asconfig is not valid json: \" + location);\n  }\n\n  // validate asconfig shape\n  if (config.options && !isObject(config.options)) {\n    throw new Error(\"Asconfig.options is not an object: \" + location);\n  }\n\n  if (config.include && !Array.isArray(config.include)) {\n    throw new Error(\"Asconfig.include is not an array: \" + location);\n  }\n\n  if (config.targets) {\n    if (!isObject(config.targets)) {\n      throw new Error(\"Asconfig.targets is not an object: \" + location);\n    }\n    const targets = Object.keys(config.targets);\n    for (let i = 0; i < targets.length; i++) {\n      const target = targets[i];\n      if (!isObject(config.targets[target])) {\n        throw new Error(\"Asconfig.targets.\" + target + \" is not an object: \" + location);\n      }\n    }\n  }\n\n  if (config.extends && typeof config.extends !== \"string\") {\n    throw new Error(\"Asconfig.extends is not a string: \" + location);\n  }\n\n  return config;\n}\n\nexports.getAsconfig = getAsconfig;\n\n/** Checks diagnostics emitted so far for errors. */\nfunction checkDiagnostics(program, stderr) {\n  var diagnostic;\n  var numErrors = 0;\n  while ((diagnostic = assemblyscript.nextDiagnostic(program)) != null) {\n    if (stderr) {\n      stderr.write(\n        assemblyscript.formatDiagnostic(diagnostic, stderr.isTTY, true) +\n        EOL + EOL\n      );\n    }\n    if (assemblyscript.isError(diagnostic)) ++numErrors;\n  }\n  return numErrors;\n}\n\nexports.checkDiagnostics = checkDiagnostics;\n\n/** Creates an empty set of stats. */\nfunction createStats() {\n  return {\n    readTime: 0,\n    readCount: 0,\n    writeTime: 0,\n    writeCount: 0,\n    parseTime: 0,\n    parseCount: 0,\n    initializeTime: 0,\n    initializeCount: 0,\n    compileTime: 0,\n    compileCount: 0,\n    emitTime: 0,\n    emitCount: 0,\n    validateTime: 0,\n    validateCount: 0,\n    optimizeTime: 0,\n    optimizeCount: 0,\n    transformTime: 0,\n    transformCount: 0\n  };\n}\n\nexports.createStats = createStats;\n\n/** Measures the execution time of the specified function.  */\nfunction measure(fn) {\n  const start = process.hrtime();\n  fn();\n  const times = process.hrtime(start);\n  return times[0] * 1e9 + times[1];\n}\n\nexports.measure = measure;\n\nfunction pad(str, len) {\n  while (str.length < len) str = \" \" + str;\n  return str;\n}\n\n/** Formats a high resolution time to a human readable string. */\nfunction formatTime(time) {\n  return time ? (time / 1e6).toFixed(3) + \" ms\" : \"n/a\";\n}\n\nexports.formatTime = formatTime;\n\n/** Formats and prints out the contents of a set of stats. */\nfunction printStats(stats, output) {\n  const format = (time, count) => pad(formatTime(time), 12) + \"  n=\" + count;\n  (output || process.stdout).write([\n    \"I/O Read   : \" + format(stats.readTime, stats.readCount),\n    \"I/O Write  : \" + format(stats.writeTime, stats.writeCount),\n    \"Parse      : \" + format(stats.parseTime, stats.parseCount),\n    \"Initialize : \" + format(stats.initializeTime, stats.initializeCount),\n    \"Compile    : \" + format(stats.compileTime, stats.compileCount),\n    \"Emit       : \" + format(stats.emitTime, stats.emitCount),\n    \"Validate   : \" + format(stats.validateTime, stats.validateCount),\n    \"Optimize   : \" + format(stats.optimizeTime, stats.optimizeCount),\n    \"Transform  : \" + format(stats.transformTime, stats.transformCount)\n  ].join(EOL) + EOL);\n}\n\nexports.printStats = printStats;\n\nvar allocBuffer = typeof global !== \"undefined\" && global.Buffer\n  ? global.Buffer.allocUnsafe || (len => new global.Buffer(len))\n  : len => new Uint8Array(len);\n\n/** Creates a memory stream that can be used in place of stdout/stderr. */\nfunction createMemoryStream(fn) {\n  var stream = [];\n  stream.write = function(chunk) {\n    if (fn) fn(chunk);\n    if (typeof chunk === \"string\") {\n      let buffer = allocBuffer(utf8.length(chunk));\n      utf8.write(chunk, buffer, 0);\n      chunk = buffer;\n    }\n    this.push(chunk);\n  };\n  stream.reset = function() {\n    stream.length = 0;\n  };\n  stream.toBuffer = function() {\n    var offset = 0, i = 0, k = this.length;\n    while (i < k) offset += this[i++].length;\n    var buffer = allocBuffer(offset);\n    offset = i = 0;\n    while (i < k) {\n      buffer.set(this[i], offset);\n      offset += this[i].length;\n      ++i;\n    }\n    return buffer;\n  };\n  stream.toString = function() {\n    var buffer = this.toBuffer();\n    return utf8.read(buffer, 0, buffer.length);\n  };\n  return stream;\n}\n\nexports.createMemoryStream = createMemoryStream;\n\n/** Compatible TypeScript compiler options for syntax highlighting etc. */\nexports.tscOptions = {\n  alwaysStrict: true,\n  noImplicitAny: true,\n  noImplicitReturns: true,\n  noImplicitThis: true,\n  noEmitOnError: true,\n  strictNullChecks: true,\n  experimentalDecorators: true,\n  target: \"esnext\",\n  module: \"commonjs\",\n  noLib: true,\n  types: [],\n  allowJs: false\n};\n","// Write text (also fallback)\n\nfunction outputCodeFile(abiInfo, hasOutput, opts, stats, baseDir, writeFile) {\n  if (opts.sourceFile != null || !hasOutput) {\n    let out;\n    if (opts.sourceFile != null && opts.sourceFile.length) {\n      // use superset text format when extension is `.wast`.\n      // Otherwise use official stack IR format (wat).\n      // let watFormat = !opts.textFile.endsWith('.ts');\n      // stats.emitCount++;\n      // stats.emitTime += measure(() => {\n        out = abiInfo.exportIndent.toString();\n        // out = module.toText(watFormat);\n      // });\n      writeFile(opts.sourceFile, out, baseDir);\n    } else if (!hasStdout) {\n      stats.emitCount++;\n      stats.emitTime += measure(() => {\n        out = module.toText();\n      });\n      writeStdout(out);\n    }\n  }\n}\n\nexports.outputCodeFile = outputCodeFile;\n\nexports.sourceText = null;","module.exports = {};\n","const process = require(\"process\"); // ensure shim\n\n// https://github.com/browserify/path-browserify v1.0.1\n//\n// Copyright (c) 2013 James Halliday\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 || res.charCodeAt(res.length - 2) !== 46) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    if (from === \".\") return to; // FIX for 'odule.ts' (see issue #1398)\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","module.exports = {\n  platform: \"linux\",\n  cwd() {\n    return \".\";\n  },\n  umask() {\n    return 0;\n  },\n  hrtime,\n  argv: []\n};\n\n// https://github.com/kumavis/browser-process-hrtime v1.0.0\n//\n// Copyright 2014 kumavis\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n// 1. Redistributions of source code must retain the above copyright notice,\n// this list of conditions and the following disclaimer.\n//\n// 2. Redistributions in binary form must reproduce the above copyright notice,\n// this list of conditions and the following disclaimer in the documentation\n// and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nvar performance = global.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime(); };\n\nfunction hrtime(previousTimestamp) {\n  var clocktime = performanceNow.call(performance);\n  var seconds = Math.floor(clocktime * 1e-3);\n  var nanoseconds = Math.floor(clocktime * 1e6 - seconds * 1e9);\n  if (previousTimestamp) {\n    seconds -= previousTimestamp[0];\n    nanoseconds -= previousTimestamp[1];\n    if (nanoseconds < 0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [ seconds, nanoseconds ];\n}\n","/**\n * @fileoverview Terminal colors utility.\n * @license Apache-2.0\n */\n\nvar proc = typeof process !== \"undefined\" && process || {};\nvar isCI = proc.env && \"CI\" in proc.env; // doesn't work when bundled because 'process' is a mock\n\nfunction from(stream, base) {\n  var colors = base || {};\n  colors.supported = (stream && !!stream.isTTY) || isCI;\n  colors.gray = text => colors.supported ? exports.GRAY + text + exports.RESET : text;\n  colors.red = text => colors.supported ? exports.RED + text + exports.RESET : text;\n  colors.green = text => colors.supported ? exports.GREEN + text + exports.RESET : text;\n  colors.yellow = text => colors.supported ? exports.YELLOW + text + exports.RESET : text;\n  colors.blue = text => colors.supported ? exports.BLUE + text + exports.RESET : text;\n  colors.magenta = text => colors.supported ? exports.MAGENTA + text + exports.RESET : text;\n  colors.cyan = text => colors.supported ? exports.CYAN + text + exports.RESET : text;\n  colors.white = text => colors.supported ? exports.WHITE + text + exports.RESET : text;\n  return colors;\n}\n\nexports.stdout = from(proc.stdout, exports);\nexports.stderr = from(proc.stderr);\nexports.from = from;\n\nexports.GRAY = \"\\u001b[90m\";\nexports.RED = \"\\u001b[91m\";\nexports.GREEN = \"\\u001b[92m\";\nexports.YELLOW = \"\\u001b[93m\";\nexports.BLUE = \"\\u001b[94m\";\nexports.MAGENTA = \"\\u001b[95m\";\nexports.CYAN = \"\\u001b[96m\";\nexports.WHITE = \"\\u001b[97m\";\nexports.RESET = \"\\u001b[0m\";\n","/**\n * @fileoverview File finding utility.\n * @license Apache-2.0\n */\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\nfunction findFiles(dirname, filter) {\n  var out = [];\n  fs.readdirSync(dirname).forEach(name => {\n    if (fs.statSync(path.join(dirname, name)).isDirectory()) {\n      findFiles(path.join(dirname, name), filter).forEach(iname => out.push(name + \"/\" + iname));\n    } else if (!filter || typeof filter === \"function\" ? filter(name) : filter.test(name)) {\n      out.push(name);\n    }\n  });\n  return out;\n}\n\nexports.files = findFiles;\n","/**\n * @fileoverview Recursive mkdir.\n * @license\n * Copyright 2010 James Halliday (mail@substack.net)\n *\n * This project is free software released under the MIT/X11 license:\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nconst process = require(\"process\"); // ensure shim\n\nmodule.exports = function mkdirp(p, opts, made) {\n  if (!opts || typeof opts !== \"object\") {\n    opts = { mode: opts };\n  }\n  var mode = opts.mode;\n  if (mode === undefined) {\n    mode = 0o777 & (~process.umask());\n  }\n  if (!made) made = null;\n  p = path.resolve(p);\n  try {\n    fs.mkdirSync(p, mode);\n    made = made || p;\n  } catch (err0) {\n    switch (err0.code) {\n      case \"ENOENT\":\n        made = mkdirp(path.dirname(p), opts, made);\n        mkdirp(p, opts, made);\n        break;\n      default:\n        var stat;\n        try {\n          stat = fs.statSync(p);\n        } catch (err1) {\n          throw err0;\n        }\n        if (!stat.isDirectory()) throw err0;\n        break;\n    }\n  }\n  return made;\n};\n","/**\n * @fileoverview Command line options utility.\n * @license Apache-2.0\n */\n\nconst path = require(\"path\");\nconst colorsUtil = require(\"./colors\");\n\n// type | meaning\n// -----|---------------\n// b    | boolean\n// i    | integer\n// f    | float\n// s    | string\n// I    | integer array\n// F    | float array\n// S    | string array\n\n/** Parses the specified command line arguments according to the given configuration. */\nfunction parse(argv, config, propagateDefaults = true) {\n  var options = {};\n  var unknown = [];\n  var args = [];\n  var trailing = [];\n\n  // make an alias map and initialize defaults\n  var aliases = {};\n  Object.keys(config).forEach(key => {\n    if (key.startsWith(\" \")) return;\n    var option = config[key];\n    if (option.alias != null) {\n      if (typeof option.alias === \"string\") aliases[option.alias] = key;\n      else if (Array.isArray(option.alias)) option.alias.forEach(alias => aliases[alias] = key);\n    }\n    if (propagateDefaults && option.default != null) options[key] = option.default;\n  });\n\n  // iterate over argv\n  for (var i = 0, k = (argv = argv.slice()).length; i < k; ++i) {\n    let arg = argv[i];\n    if (arg == \"--\") { ++i; break; }\n    let match = /^(?:(-\\w)(?:=(.*))?|(--\\w{2,})(?:=(.*))?)$/.exec(arg), option, key;\n    if (match) {\n      if (config[arg]) option = config[key = arg]; // exact\n      else if (match[1] != null) { // alias\n        option = config[key = aliases[match[1].substring(1)]];\n        if (option && match[2] != null) argv[i--] = match[2];\n      } else if (match[3] != null) { // full\n        option = config[key = match[3].substring(2)];\n        if (option && match[4] != null) argv[i--] = match[4];\n      }\n    } else {\n      if (arg.charCodeAt(0) == 45) option = config[key = arg]; // exact\n      else { args.push(arg); continue; } // argument\n    }\n    if (option) {\n      if (option.value) {\n        // alias setting fixed values\n        Object.keys(option.value).forEach(k => options[k] = option.value[k]);\n      } else if (option.type == null || option.type === \"b\") {\n        // boolean flag not taking a value\n        options[key] = true;\n      } else {\n        if (i + 1 < argv.length && argv[i + 1].charCodeAt(0) != 45) {\n          // non-boolean with given value\n          switch (option.type) {\n            case \"i\": options[key] = parseInt(argv[++i], 10); break;\n            case \"I\": options[key] = (options[key] || []).concat(parseInt(argv[++i], 10)); break;\n            case \"f\": options[key] = parseFloat(argv[++i]); break;\n            case \"F\": options[key] = (options[key] || []).concat(parseFloat(argv[++i])); break;\n            case \"s\": options[key] = String(argv[++i]); break;\n            case \"S\": options[key] = (options[key] || []).concat(argv[++i].split(\",\")); break;\n            default: unknown.push(arg); --i;\n          }\n        } else {\n          // non-boolean with omitted value\n          switch (option.type) {\n            case \"i\":\n            case \"f\": options[key] = option.default || 0; break;\n            case \"s\": options[key] = option.default || \"\"; break;\n            case \"I\":\n            case \"F\":\n            case \"S\": options[key] = option.default || []; break;\n            default: unknown.push(arg);\n          }\n        }\n      }\n    } else unknown.push(arg);\n  }\n  while (i < k) trailing.push(argv[i++]); // trailing\n  if (propagateDefaults) addDefaults(config, options);\n\n  return { options, unknown, arguments: args, trailing };\n}\n\nexports.parse = parse;\n\n/** Generates the help text for the specified configuration. */\nfunction help(config, options) {\n  if (!options) options = {};\n  var indent = options.indent || 2;\n  var padding = options.padding || 24;\n  var eol = options.eol || \"\\n\";\n  var sbCategories = {};\n  var sbOther = [];\n  Object.keys(config).forEach(key => {\n    var option = config[key];\n    if (option.description == null) return;\n    var text = \"\";\n    while (text.length < indent) text += \" \";\n    text += \"--\" + key;\n    if (option.alias) text += \", -\" + option.alias;\n    while (text.length < padding) text += \" \";\n    var sb;\n    if (!options.noCategories && option.category) {\n      if (!(sb = sbCategories[option.category])) {\n        sbCategories[option.category] = sb = [];\n      }\n    } else {\n      sb = sbOther;\n    }\n    if (Array.isArray(option.description)) {\n      sb.push(text + option.description[0] + option.description.slice(1).map(line => {\n        for (let i = 0; i < padding; ++i) line = \" \" + line;\n        return eol + line;\n      }).join(\"\"));\n    } else sb.push(text + option.description);\n  });\n  var sb = [];\n  var hasCategories = false;\n  Object.keys(sbCategories).forEach(category => {\n    hasCategories = true;\n    sb.push(eol + \" \" + colorsUtil.gray(category) + eol);\n    sb.push(sbCategories[category].join(eol));\n  });\n  if (hasCategories) {\n    sb.push(eol + \" \" + colorsUtil.gray(\"Other\") + eol);\n  }\n  sb.push(sbOther.join(eol));\n  return sb.join(eol);\n}\n\nexports.help = help;\n\n/** Sanitizes an option value to be a valid value of the option's type. */\nfunction sanitizeValue(value, type) {\n  if (value != null) {\n    switch (type) {\n      case undefined:\n      case \"b\": return Boolean(value);\n      case \"i\": return Math.trunc(value) || 0;\n      case \"f\": return Number(value) || 0;\n      case \"s\": {\n        if (value === true) return \"\";\n        return String(value);\n      }\n      case \"I\": {\n        if (!Array.isArray(value)) value = [ value ];\n        return value.map(v => Math.trunc(v) || 0);\n      }\n      case \"F\": {\n        if (!Array.isArray(value)) value = [ value ];\n        return value.map(v => Number(v) || 0);\n      }\n      case \"S\": {\n        if (!Array.isArray(value)) value = [ value ];\n        return value.map(String);\n      }\n    }\n  }\n  return undefined;\n}\n\n/** Merges two sets of options into one, preferring the current over the parent set. */\nfunction merge(config, currentOptions, parentOptions, parentBaseDir) {\n  const mergedOptions = {};\n  for (const [key, { type, mutuallyExclusive, isPath, useNodeResolution, cliOnly }] of Object.entries(config)) {\n    let currentValue = sanitizeValue(currentOptions[key], type);\n    let parentValue = sanitizeValue(parentOptions[key], type);\n    if (currentValue == null) {\n      if (parentValue != null) {\n        // only parent value present\n        if (cliOnly) continue;\n        if (Array.isArray(parentValue)) {\n          let exclude;\n          if (isPath) {\n            parentValue = parentValue.map(value => resolvePath(value, parentBaseDir, useNodeResolution));\n          }\n          if (mutuallyExclusive != null && (exclude = currentOptions[mutuallyExclusive])) {\n            mergedOptions[key] = parentValue.filter(value => !exclude.includes(value));\n          } else {\n            mergedOptions[key] = parentValue.slice();\n          }\n        } else {\n          if (isPath) {\n            parentValue = resolvePath(parentValue, parentBaseDir, useNodeResolution);\n          }\n          mergedOptions[key] = parentValue;\n        }\n      }\n    } else if (parentValue == null) {\n      // only current value present\n      if (Array.isArray(currentValue)) {\n        mergedOptions[key] = currentValue.slice();\n      } else {\n        mergedOptions[key] = currentValue;\n      }\n    } else {\n      // both current and parent values present\n      if (Array.isArray(currentValue)) {\n        if (cliOnly) {\n          mergedOptions[key] = currentValue.slice();\n          continue;\n        }\n        let exclude;\n        if (isPath) {\n          parentValue = parentValue.map(value => resolvePath(value, parentBaseDir, useNodeResolution));\n        }\n        if (mutuallyExclusive != null && (exclude = currentOptions[mutuallyExclusive])) {\n          mergedOptions[key] = [\n            ...currentValue,\n            ...parentValue.filter(value => !currentValue.includes(value) && !exclude.includes(value))\n          ];\n        } else {\n          mergedOptions[key] = [\n            ...currentValue,\n            ...parentValue.filter(value => !currentValue.includes(value)) // dedup\n          ];\n        }\n      } else {\n        mergedOptions[key] = currentValue;\n      }\n    }\n  }\n  return mergedOptions;\n}\n\nexports.merge = merge;\n\nconst dynrequire = typeof __webpack_require__ === \"function\"\n  ? __non_webpack_require__\n  : require;\n\n/** Resolves a single possibly relative path. Keeps absolute paths, otherwise prepends baseDir. */\nfunction resolvePath(p, baseDir, useNodeResolution = false) {\n  if (path.isAbsolute(p)) return p;\n  if (useNodeResolution && !p.startsWith(\".\")) {\n    return dynrequire.resolve(p, { paths: [ baseDir ] });\n  }\n  return path.join(baseDir, p);\n}\n\nexports.resolvePath = resolvePath;\n\n/** Populates default values on a parsed options result. */\nfunction addDefaults(config, options) {\n  for (const [key, { default: defaultValue }] of Object.entries(config)) {\n    if (options[key] == null && defaultValue != null) {\n      options[key] = defaultValue;\n    }\n  }\n}\n\nexports.addDefaults = addDefaults;\n","/**\n * @fileoverview UTF8 utility.\n * @license Apache-2.0\n */\n\n// @protobufjs/utf8\n\n/**\n * A minimal UTF8 implementation for number arrays.\n * @memberof util\n * @namespace\n */\nvar utf8 = exports;\n\n/**\n * Calculates the UTF8 byte length of a string.\n * @param {string} string String\n * @returns {number} Byte length\n */\nutf8.length = function utf8_length(string) {\n  var len = 0,\n      c = 0;\n  for (var i = 0, l = string.length; i < l; ++i) {\n    c = string.charCodeAt(i);\n    if (c < 128)\n      len += 1;\n    else if (c < 2048)\n      len += 2;\n    else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\n      ++i;\n      len += 4;\n    } else\n      len += 3;\n  }\n  return len;\n};\n\n/**\n * Reads UTF8 bytes as a string.\n * @param {Uint8Array} buffer Source buffer\n * @param {number} start Source start\n * @param {number} end Source end\n * @returns {string} String read\n */\nutf8.read = function utf8_read(buffer, start, end) {\n  var len = end - start;\n  if (len < 1)\n    return \"\";\n  var parts = null,\n      chunk = [],\n      i = 0, // char offset\n      t;     // temporary\n  while (start < end) {\n    t = buffer[start++];\n    if (t < 128)\n      chunk[i++] = t;\n    else if (t > 191 && t < 224)\n      chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\n    else if (t > 239 && t < 365) {\n      t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\n      chunk[i++] = 0xD800 + (t >> 10);\n      chunk[i++] = 0xDC00 + (t & 1023);\n    } else\n      chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\n    if (i > 8191) {\n      (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\n      i = 0;\n    }\n  }\n  if (parts) {\n    if (i)\n      parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\n    return parts.join(\"\");\n  }\n  return String.fromCharCode.apply(String, chunk.slice(0, i));\n};\n\n/**\n * Writes a string as UTF8 bytes.\n * @param {string} string Source string\n * @param {Uint8Array} buffer Destination buffer\n * @param {number} offset Destination offset\n * @returns {number} Bytes written\n */\nutf8.write = function utf8_write(string, buffer, offset) {\n  var start = offset,\n      c1, // character 1\n      c2; // character 2\n  for (var i = 0; i < string.length; ++i) {\n    c1 = string.charCodeAt(i);\n    if (c1 < 128) {\n      buffer[offset++] = c1;\n    } else if (c1 < 2048) {\n      buffer[offset++] = c1 >> 6 | 192;\n      buffer[offset++] = c1 & 63 | 128;\n    } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\n      c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\n      ++i;\n      buffer[offset++] = c1 >> 18 | 240;\n      buffer[offset++] = c1 >> 12 & 63 | 128;\n      buffer[offset++] = c1 >> 6 & 63 | 128;\n      buffer[offset++] = c1 & 63 | 128;\n    } else {\n      buffer[offset++] = c1 >> 12 | 224;\n      buffer[offset++] = c1 >> 6 & 63 | 128;\n      buffer[offset++] = c1 & 63 | 128;\n    }\n  }\n  return offset - start;\n};\n","if(typeof __WEBPACK_EXTERNAL_MODULE__525__ === 'undefined') { var e = new Error(\"Cannot find module 'assemblyscript'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__525__;","module.exports = __WEBPACK_EXTERNAL_MODULE__911__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(469);\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};"],"sourceRoot":""}