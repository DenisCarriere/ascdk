#!/usr/bin/env node

const tailArgs = process.argv.indexOf("--");
if (~tailArgs) {
    require("child_process").spawnSync(
        process.argv[0],
        process.argv.slice(tailArgs + 1).concat(
            process.argv.slice(1, tailArgs)
        ),
        { stdio: "inherit" }
    );
    return;
}

try { require("source-map-support").install(); } catch (e) { }

const asc = module.exports = require("ask-transform/src/asc/asc.js");
// const asc = module.exports = require("assemblyscript/cli/asc.js");
const sourceFile = process.argv[2];
const releaseMode = process.argv[3];
const outputDir = process.argv[4];
const outputName = process.argv[5];

if (!sourceFile || !releaseMode || !outputDir || !outputName) {
    console.log(
    `Usage:
        ask <source-file> <release-mode> <output-dir> <output-name>

        options:
            source-file: file to be compiled.
            release-mode: true of false, false will output debug files.
            output-dir: an folder where to store output files.
            output-name: name of output files.
    `);

    process.exit(1);
}

const path = require("path");
const ARGS = [
    sourceFile,
    "--importMemory",
    "--initialMemory",
    "2",
    "--maximumMemory",
    "16",
    "--noExportMemory",
    "--runtime",
    "--use",
    "abort= ",
    releaseMode ? "-O3z" : "-O2",
    "--transform",
    "ask-transform/index.ts"
]

if (/\bask$/.test(process.argv[1])) {
    console.log("Build Starting ······")
    asc.ready.then(() => {
        process.outputDir = outputDir;
        process.exitCode = asc.main(ARGS);
        asc.ready.then(()=> {
                console.log("Build progressing. Generating target files ······")
                let wasmPath = path.join(outputDir, `${outputName}.wasm`);
                ARGS.push("-b", wasmPath)
                if (!releaseMode) {
                    ARGS.push("--debug"); // to generate debug info in binary code
                    let wastPath = path.join(outputDir, `${outputName}.wast`);
                    ARGS.push("-t", wastPath);
                }
                const ascOption = require("ask-transform/src/ascoption.js");
                let apiOption = new ascOption.APIOptionImpl();
                asc.main(ARGS, apiOption);
                if (!releaseMode) {
                    apiOption.writeExtensionFile();
                }
                console.log(`Build Done. Targets generated. Target directory: ${outputDir}.`);
        });
        return process.exitCode
    });
}


